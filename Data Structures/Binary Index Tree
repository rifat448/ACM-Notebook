#include<bits/stdc++.h>
#define ll long long
#define MAXN 100005

using namespace std;

int tree[MAXN];

int query(int idx){
    int ans=0;
    while(idx>0){
        ans+=tree[idx];
        idx-=idx&(-idx);
    }
    return ans;
}

void update(int idx, int n, int x){
    while(idx<=n){
        tree[idx]+=x;
        idx+=idx&(-idx);
    }
}

int main()
{
    int t,cas=0;
    scanf("%d",&t);
    while(t--){
        memset(tree,0,sizeof(tree));
        printf("Case %d:\n",++cas);
        string s;
        cin>>s;
        int n=s.size();
        int arr[n+1];
        for(int i=0;i<n;i++){
            if(s[i]=='0') arr[i+1]=0;
            else arr[i+1]=1;
        }
        int q;
        scanf("%d",&q);
        while(q--){
            char c;
            cin>>c;
            if(c=='I'){
                int i,j;
                scanf("%d%d",&i,&j);
                update(i,n,1);
                update(j+1,n,-1);
            }
            else{
                int x;
                scanf("%d",&x);
                //cout<<query(x)<<" "<<query(x-1)<<endl;
                int ans= query(x)+arr[x];
                printf("%d\n",(ans%2));
            }
        }
    }

}
